var express = require('express');
var app = express();
var bodyParser = require('body-parser');
var morgan = require('morgan');
var mongoose = require('mongoose');
var passport = require('passport');
var moment = require('moment');
var config = require('./config/database'); // get db config file
var User = require('./models/user'); // get the mongoose model
var port = process.env.PORT || 4000;
var jwt = require('jwt-simple');
var Room = require('./models/room');
var Reservation = require('./models/reservation');
const validator = require('validator');
const { check, validationResult } = require('express-validator/check');
var fs = require('fs-extra');
var util = require('util');
// route pour les services implimenter dans les routes de package routes.
var users = require('./routes/users');
var room = require('./routes/room');
var reservation = require('./routes/reservation');
// get our request parameters
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
// log to console
app.use(morgan('dev'));
// Use the passport package in our application
app.use(passport.initialize());
//  Route (GET http://localhost:3000)
app.get('/', function (req, res) {
    res.send('The API is running at http://localhost:' + port + '/api');
});
// Start the server
app.listen(port);
// connect to database
mongoose.connect(config.dataBaseTest);
// pass passport for configuration
require('./config/passport')(passport);
// bundle our routes
var apiRoutes = express.Router();
app.options("/*", function (req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');
    res.header('Access-Control-Allow-Headers', 'uid, Content-Type, Authorization, Content-Length, X-Requested-With');
    res.send(200);
});
// POST room picture not yet
apiRoutes.post('/pictures', function (req, res) {
    console.log("loading photo");
    // Access-Control-Allow-Origin' header is required.
    res.header('Access-Control-Allow-Origin', '*');
    if (!req.body.id_room || !req.body.picture) {
        // If Submit was accidentally clicked with no file selected...
        return res.json({
            error: true,
            message: 'id_room, picture must be sets'
        });
    } else {

        var newItem = new Picture({
            id_room: req.body.id_room,
            img: this.body.picture,
        });

        newItem.save(function (err) {
            if (err) {
                return res.json({ error: true, message: err.message });
            }
            return res.json({ error: false });
        });

    }
});
// GET room picture not yet

apiRoutes.get('/pictures/:id_room', function (req, res) {


    // Access-Control-Allow-Origin' header is required.
    res.header('Access-Control-Allow-Origin', '*');
    // assign the URL parameter to a variable
    var id_room = req.params.id_room;
    // open the mongodb connection with the connection
    // string stored in the variable called url.

    Picture.find({ 'id_room': id_room }, function (err, pictures) {
        // set the http response header so the browser knows this
        // is an 'image/jpeg' or 'image/png'
        res.setHeader('content-type', results.contentType);
        // send only the base64 string stored in the img object
        // buffer element
        res.send({ size: pictures.length, pictures: pictures });
    });
});
app.use('/api', apiRoutes);
app.use('/api/',users);
app.use('/api/rooms/',room);
app.use('/api/reservation/',reservation);

module.exports = app;
